import socket
from scapy.all import *
from scapy.layers.dns import DNS, UDP, IP


from dns.DNS_controller import DNSController
import dns_settings    
    
def process_dns_request(request, source_address, socket): # pragma: no cover
    packet = DNS(request)
    dns = packet.getlayer(DNS)
    
    if dns and dns.opcode == 0 and dns.qr == 0:
        DNSController.display_DNS_query(dns)
        if dns.qd.qtype == 1 or dns.qd.qtype == 5 or dns.qd.qtype == 28:
            dns_response = DNSController.single_record_lookup(dns)
        elif dns.qd.qtype == 2 or dns.qd.qtype == 15:
            dns_response = DNSController.multiple_records_lookup(dns)
        else: 
            dns_response = DNSController.google_request(dns)

        DNSController.display_DNS_response(dns_response)
        socket.sendto(bytes(dns_response), source_address)

def main(): # pragma: no cover
    udp_socket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, proto=socket.IPPROTO_UDP)
    udp_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    udp_socket.bind(('0.0.0.0', dns_settings.UDP_PORT))

    try: 
        while True:
            request_data, source_address = udp_socket.recvfrom(65535)
            print('source address', source_address)
            process_dns_request(request_data, source_address, udp_socket)
    finally: 
        udp_socket.close()

if __name__ == "__main__":
    main()