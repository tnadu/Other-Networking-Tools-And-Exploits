class Statistics:
    filename: str = 'blacklists/blocked_domains.txt'  

    @staticmethod
    def populate_blocked_domains() -> list:
        blocked_domains: list = []
        with open(Statistics.filename, 'r') as file:
            for line in file:
                if line.startswith("Blocked:"):
                    domain = line.strip().replace("Blocked: ", "")
                    blocked_domains.append(domain)
        
        return blocked_domains 

    @staticmethod
    def populate_blocked_companies(blocked_domains: list) -> dict:
        blocked_companies: dict = {}
        for domain in blocked_domains:
            company = domain.split('.')[1]
            blocked_companies[company] = 1 if company not in blocked_companies else blocked_companies[company] + 1
        
        return blocked_companies

    @staticmethod
    def main() -> None:
        blocked_domains: list = Statistics.populate_blocked_domains()
        google_count: int = sum('google' in domain for domain in blocked_domains)
        facebook_count: int = sum('facebook' in domain for domain in blocked_domains)

        print(f"Number of domains that contain 'google': {google_count}")
        print(f"Number of domains that contain 'facebook': {facebook_count}")

        blocked_companies: dict = Statistics.populate_blocked_companies(blocked_domains)
        sorted_companies: list = sorted(blocked_companies.items(), key=lambda x: x[1], reverse=True)

        print("Most frequent domains:")
        for company, count in sorted_companies:
            print(f"{company}: {count}")